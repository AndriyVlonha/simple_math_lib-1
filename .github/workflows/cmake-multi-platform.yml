name: Build and Test-run

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            build_type: Release
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            build_type: Release
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set build-output-dir
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: |
          cmake -B "${{ steps.strings.outputs.build-output-dir }}" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -S "${{ github.workspace }}"
        shell: bash

      - name: Build
        run: cmake --build "${{ steps.strings.outputs.build-output-dir }}" --config ${{ matrix.build_type }}
        shell: bash

      - name: Test (verbose + print LastTest.log)
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          # Run tests verbosely and capture output even if tests fail
          ctest --rerun-failed --output-on-failure -C ${{ matrix.build_type }} -V || true

          echo "---- LastTest.log (if exists) ----"
          if [ -f Testing/Temporary/LastTest.log ]; then
            sed -n '1,400p' Testing/Temporary/LastTest.log || true
            echo "---- end of LastTest.log ----"
          else
            echo "No LastTest.log found"
          fi

          # Fail the job if tests really failed (makes CI red)
          if [ -f Testing/Temporary/LastTest.log ] && grep -q "0% tests passed" Testing/Temporary/LastTest.log 2>/dev/null; then
            echo "Tests failed. Exiting with non-zero code."
            exit 1
          fi
        shell: bash
